options:
  # Send logs only to Cloud Logging
  logging: CLOUD_LOGGING_ONLY

steps:
# Build the image
- name: 'gcr.io/cloud-builders/docker'
  id: BuildImage
  args:
    [
      'build',
      '--no-cache',
      '-t', 'gcr.io/$PROJECT_ID/pantrypal:$SHORT_SHA',
      '.'
    ]

# Run the Flask app and test functionality
- name: 'gcr.io/cloud-builders/docker'
  id: TestImage
  entrypoint: bash
  args:
    - -c
    - |
      set -e

      # Print the Docker image that was built
      echo "Using image: gcr.io/$PROJECT_ID/pantrypal:$SHORT_SHA"
      
      # launch your app in the background with port mapping and secrets as environment variables
      docker run -d --name smoke \
        -p 8080:8080 \
        -e FLASK_APP=app.py \
        -e FLASK_RUN_HOST=0.0.0.0 \
        -e FLASK_RUN_PORT=8080 \
        -e FIREBASE_API_KEY=$$FIREBASE_API_KEY \
        -e FIREBASE_AUTH_DOMAIN=$$FIREBASE_AUTH_DOMAIN \
        -e FIREBASE_DATABASE_URL=$$FIREBASE_DATABASE_URL \
        -e FIREBASE_PROJECT_ID=$$FIREBASE_PROJECT_ID \
        -e FIREBASE_STORAGE_BUCKET=$$FIREBASE_STORAGE_BUCKET \
        -e FIREBASE_MESSAGING_SENDER_ID=$$FIREBASE_MESSAGING_SENDER_ID \
        -e FIREBASE_APP_ID=$$FIREBASE_APP_ID \
        -e FIREBASE_MEASUREMENT_ID=$$FIREBASE_MEASUREMENT_ID \
        -e EMAIL_SMTP_SERVER=$$EMAIL_SMTP_SERVER \
        -e EMAIL_SMTP_PORT="$$EMAIL_SMTP_PORT" \
        -e EMAIL_USERNAME=$$EMAIL_USERNAME \
        -e EMAIL_PASSWORD=$$EMAIL_PASSWORD \
        gcr.io/$PROJECT_ID/pantrypal:$SHORT_SHA

      echo "Waiting up to 10s for the app to start..."
      for i in $(seq 1 10); do
        echo "Try #$i - checking if app is running..."
        if docker exec smoke curl --silent --fail http://localhost:8080/; then
          echo "Smoke test passed!"
          docker stop smoke
          exit 0
        fi
        echo "Retry #$i..."
        sleep 1
      done

      # on failure, show the app logs
      echo "Smoke test failed; dumping container logs:"
      docker logs smoke
      echo "Docker images available:"
      docker images
      docker stop smoke
      exit 1